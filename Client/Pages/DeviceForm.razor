@inject IJSRuntime JSRuntime

<div class="device">
    <EditForm Model="Item" OnValidSubmit="OnOK">

        <DataAnnotationsValidator />

        <div class="name">
            <span class="caption">デバイス名</span>
            <span class="input-field">
                <input type="text" @bind="Item.Name" />
            </span>
        </div>
        <div class="mac-address">
            <span class="caption">MACアドレス</span>
            <span class="input-field">
                <input type="text" @bind="Item.MACAddress" />
            </span>
        </div>
        <div class="error-message">
            <ValidationSummary></ValidationSummary>
        </div>
        <div class="actions">
            @if (OnClickDelete != null)
            {
                <button class="button delete-button" type="button" @onclick="OnDelete">削除</button>
            }
            <button class="button">OK</button>
            <a class="button" href="/">キャンセル</a>
        </div>
    </EditForm>
</div>

@code {
    [Parameter]
    public Device Item { get; set; }

    [Parameter]
    public Func<Device, Task> OnClickOK { get; set; }

    [Parameter]
    public Func<Task> OnClickDelete { get; set; }

    async Task OnOK()
    {
        // MACアドレスの正規化
        Item.MACAddress = Item.MACAddress.Replace("-", ":").ToUpper();

        await OnClickOK?.Invoke(Item);
    }

    async Task OnDelete()
    {
        var yes = await JSRuntime.InvokeAsync<bool>("confirm", "削除してもよろしいですか?");
        if (yes)
        {
            await OnClickDelete?.Invoke();
        }
    }
}
